[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (AdoptOpenJDK Java 1.8.0_292)
[debug] Load.defaultLoad until apply took 262.9643ms
[debug]                 Load.loadUnit: plugins took 141.8447ms
[debug]                 Load.loadUnit: defsScala took 0.4418ms
[debug] [Loading] Scanning directory D:\Github\Effective-Programming-in-Scala\Week_6\notes\project\project
[debug]                   Load.loadUnit: mkEval took 33.3968ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.3053 ms
[info] loading settings for project notes-build-build from metals.sbt ...
[debug]                     Load.resolveProject(notes-build-build) took 57.4929ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id notes-build-build, base: D:\Github\Effective-Programming-in-Scala\Week_6\notes\project\project, plugins: List(<none>))) took 81.765ms
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes\project\project, returning: (notes-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 2271.7956ms
[debug]                 Load.loadUnit: cleanEvalClasses took 19.5697ms
[debug]               Load.loadUnit(file:/D:/Github/Effective-Programming-in-Scala/Week_6/notes/project/project/, ...) took 2451.4586ms
[debug]             Load.apply: load took 2611.1045ms
[debug]             Load.apply: resolveProjects took 6.553ms
[debug]             Load.apply: finalTransforms took 61.8037ms
[debug]             Load.apply: config.delegates took 6.7253ms
[debug]             Load.apply: Def.make(settings)... took 347.9106ms
[debug]             Load.apply: structureIndex took 69.5178ms
[debug]             Load.apply: mkStreams took 1.4281ms
[info] loading project definition from D:\Github\Effective-Programming-in-Scala\Week_6\notes\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 5468.676ms
[debug]           Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory D:\Github\Effective-Programming-in-Scala\Week_6\notes\project
[debug]             Load.loadUnit: mkEval took 0.6924ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8982 ms
[info] loading settings for project notes-build from metals.sbt ...
[debug]               Load.resolveProject(notes-build) took 22.2512ms
[debug]             Load.loadTransitive: finalizeProject(Project(id notes-build, base: D:\Github\Effective-Programming-in-Scala\Week_6\notes\project, plugins: List(<none>))) took 25.0894ms
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes\project, returning: (notes-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 629.3653ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.4883ms
[debug]         Load.loadUnit(file:/D:/Github/Effective-Programming-in-Scala/Week_6/notes/project/, ...) took 6124.2102ms
[debug]       Load.apply: load took 6126.5861ms
[debug]       Load.apply: resolveProjects took 0.1315ms
[debug]       Load.apply: finalTransforms took 16.8099ms
[debug]       Load.apply: config.delegates took 0.5033ms
[debug]       Load.apply: Def.make(settings)... took 130.1338ms
[debug]       Load.apply: structureIndex took 34.3108ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from D:\Github\Effective-Programming-in-Scala\Week_6\notes\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\notes-build.json
[success] Total time: 13 s, completed 5 Jun, 2023 10:11:15 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 20217.8095ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory D:\Github\Effective-Programming-in-Scala\Week_6\notes
[debug]       Load.loadUnit: mkEval took 0.6996ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0962 ms
[info] loading settings for project notes from build.sbt ...
[debug]         Load.resolveProject(notes) took 18.0615ms
[debug]       Load.loadTransitive: finalizeProject(Project(id notes, base: D:\Github\Effective-Programming-in-Scala\Week_6\notes, plugins: List(<none>))) took 21.8672ms
[debug] [Loading] Done in D:\Github\Effective-Programming-in-Scala\Week_6\notes, returning: (notes)
[debug]     Load.loadUnit: loadedProjectsRaw took 957.8779ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.2611ms
[debug]   Load.loadUnit(file:/D:/Github/Effective-Programming-in-Scala/Week_6/notes/, ...) took 21180.704ms
[debug] Load.apply: load took 21217.7849ms
[debug] Load.apply: resolveProjects took 0.172ms
[debug] Load.apply: finalTransforms took 14.3755ms
[debug] Load.apply: config.delegates took 0.525ms
[debug] Load.apply: Def.make(settings)... took 69.1352ms
[debug] Load.apply: structureIndex took 15.0227ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to notes (in build file:/D:/Github/Effective-Programming-in-Scala/Week_6/notes/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(bloopInstall, None, None)
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
